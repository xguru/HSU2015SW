PHP
함수를 선언하고자 할때는 그것이 함수라는 것을 Function을 명시하여 쉽게 함수라는걸 알 수 있었다. 함수말고도 변수명 앞에 $를 부혀서 그것이 변수라는 것을 쉽게 알 수 있게 만들어 놨다. 이처럼 함수나, 변수를 쉽게쉽게 알아 볼 수 있었다.
 씨언어 나 씨쁠쁠처럼 여러 가지 기능들이 비슷 했다. 가령주석을 처리하는 것, 제어문,클래스 선언문 이 비슷해서 기존에 내가 배웟던 언어와 일관성이 있어서 배우기 편했다.
조금은 html 과 비슷한점도 있었는데 end로 끝난다거나, <>를 사용한다는점에서 도 html과의 호환성도 있는듯했다.

PYTHON
세미클론(;)이나 end , {}를 볼 수 없었고 대신 들여쓰기로 문장을 구분했기 때문에 오류 발생의 빈도가 다른 언어에 비해서 적었던거 같다. 파이ㅆ?ㄴ 또한 다른 앞전에 공부했던 언어들과의 형식또한 많이 다르지 않았다. 함수부분에서는 간단하게 재사용을 할 수 있어서 만든사람입장에서는 가독성이 좋을 수 있다고 생각했지만 보는사람 입장에선 힘들 수 있다고도 생각했다.
그래도 늦게 만들어진 언어이니 만큼 대량생산이라던가, 다른언어와의 호환성이 뛰어난거 같다.

RUBY
파이썬과 마찬가지로 세미클론(;)이 없다는점이 장점이자 차이점 이였던거같다.
하지만 차이점은 end를 사용한다는점에서의 차이점이 장점이자 단점이였던거 같다
 또한 루비에서는 인스턴스 변수는 @을 붙이고 접근제한자를 지원하고 있었다.
조사해보니 가장 큰 특징은 모든 것이 객채 였다는 것이였던거 같다. 문자열이나 숫자 혹은 클래스 그 자체도 객체였었다. 객체가 아닌 자료형은 찾아 볼 수 없었다. 그래서 개발 속도가 매우 빠르고 웹 서비스를 만드는데 최적화 되어 있다.

JAVA Script
JAVA Script 는 JAVA와 굉장히 비슷한 언어구조를 가지고 있을 줄 알았는데 생각보다는 많이 달랐는데 JAVA보다는 조금씩은 코드가 짧았고, 그만큼 가독성이나 생산력이 높아질것으로 생각됬다다. 특징은 자바스크립트는 항상 변수를 만들고, 그 변수에 인스턴스를 생성하는것부터 시작됬다.  스트링 같은 경우는 큰따옴표를 사용함에 바로바로 그것을 문자열로 인식했다.
또한 php와 비슷하게 씨언어나 씨쁠쁠처럼 구조가 비슷했다. 
